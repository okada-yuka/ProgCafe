{"remainingRequest":"/Users/yokada/M1/ProgCafe/prog-cafe-front/node_modules/babel-loader/lib/index.js!/Users/yokada/M1/ProgCafe/prog-cafe-front/node_modules/ts-loader/index.js??ref--14-2!/Users/yokada/M1/ProgCafe/prog-cafe-front/node_modules/eslint-loader/index.js??ref--13-0!/Users/yokada/M1/ProgCafe/prog-cafe-front/src/utils/http.ts","dependencies":[{"path":"/Users/yokada/M1/ProgCafe/prog-cafe-front/src/utils/http.ts","mtime":1600820798371},{"path":"/Users/yokada/M1/ProgCafe/prog-cafe-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yokada/M1/ProgCafe/prog-cafe-front/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/yokada/M1/ProgCafe/prog-cafe-front/node_modules/ts-loader/index.js","mtime":499162500000},{"path":"/Users/yokada/M1/ProgCafe/prog-cafe-front/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi51cmwiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICIvVXNlcnMveW9rYWRhL00xL1Byb2dDYWZlL3Byb2ctY2FmZS1mcm9udC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIi9Vc2Vycy95b2thZGEvTTEvUHJvZ0NhZmUvcHJvZy1jYWZlLWZyb250L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKCi8qIGVzbGludC1kaXNhYmxlIEB0eXBlc2NyaXB0LWVzbGludC9jYW1lbGNhc2UgKi8KaW1wb3J0IHsgZW5kcG9pbnQgfSBmcm9tICdAL3V0aWxzL2NvbnN0YW50cyc7CnZhciBwYXRocyA9IHsKICBzaWduaW46ICcvc2lnbnVwJywKICBmb2xsb3c6ICcvZm9sbG93JywKICBzZWFyY2g6ICcvc2VhcmNoJywKICBnZXRVc2VySW5mbzogJy91c2VyJwp9OwoKdmFyIHBvc3QgPSBmdW5jdGlvbiBwb3N0KHVybCwgYm9keSkgewogIHZhciBvcHRpb25zID0gYXJndW1lbnRzLmxlbmd0aCA+IDIgJiYgYXJndW1lbnRzWzJdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMl0gOiB7fTsKICByZXR1cm4gZmV0Y2godXJsLCBfb2JqZWN0U3ByZWFkKHsKICAgIG1ldGhvZDogJ1BPU1QnLAogICAgaGVhZGVyczogewogICAgICAnY29udGVudC10eXBlJzogJ3RleHQvcGxhaW4nCiAgICB9LAogICAgYm9keTogSlNPTi5zdHJpbmdpZnkoYm9keSkKICB9LCBvcHRpb25zKSk7Cn07CgpleHBvcnQgdmFyIHNpZ25pbiA9IGZ1bmN0aW9uIHNpZ25pbihpZCkgewogIHJldHVybiBwb3N0KCIiLmNvbmNhdChlbmRwb2ludCkuY29uY2F0KHBhdGhzLnNpZ25pbiksIHsKICAgIGlkOiBpZAogIH0pLnRoZW4oZnVuY3Rpb24gKHJlcykgewogICAgaWYgKCFyZXMub2spIHRocm93IG5ldyBFcnJvcignRmFpbGVkIHNpZ25pbicpOwogICAgcmV0dXJuIHJlcy5qc29uKCk7CiAgfSkudGhlbihmdW5jdGlvbiAoanNvbikgewogICAgcmV0dXJuIGpzb247CiAgfSk7Cn07CmV4cG9ydCB2YXIgZm9sbG93ID0gZnVuY3Rpb24gZm9sbG93KHNlbGYsIHRhcmdldCwgZm9sbG93aW5nKSB7CiAgcmV0dXJuIHBvc3QoIiIuY29uY2F0KGVuZHBvaW50KS5jb25jYXQocGF0aHMuZm9sbG93KSwgewogICAgaWQ6IHNlbGYsCiAgICB0bzogdGFyZ2V0LAogICAgdHlwZTogZm9sbG93aW5nID8gJ2ZvbGxvdycgOiAndW5mb2xsb3cnCiAgfSkudGhlbiggLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICAgIHZhciBfcmVmID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKHJlcykgewogICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgaWYgKHJlcy5vaykgewogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDY7CiAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gRXJyb3I7CiAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDQ7CiAgICAgICAgICAgICAgcmV0dXJuIHJlcy50ZXh0KCk7CgogICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgX2NvbnRleHQudDEgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgIHRocm93IG5ldyBfY29udGV4dC50MChfY29udGV4dC50MSk7CgogICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUpOwogICAgfSkpOwoKICAgIHJldHVybiBmdW5jdGlvbiAoX3gpIHsKICAgICAgcmV0dXJuIF9yZWYuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIH07CiAgfSgpKTsKfTsKZXhwb3J0IHZhciBnZXRVc2VySW5mbyA9IGZ1bmN0aW9uIGdldFVzZXJJbmZvKHNlbGYsIHRhcmdldCwgZ2V0Rm9sbG93aW5nKSB7CiAgcmV0dXJuIHBvc3QoIiIuY29uY2F0KGVuZHBvaW50KS5jb25jYXQocGF0aHMuZ2V0VXNlckluZm8pLCB7CiAgICBpZDogc2VsZiwKICAgIHRvOiB0YXJnZXQsCiAgICBzaG93X2ZvbGxvdzogZ2V0Rm9sbG93aW5nCiAgfSkudGhlbiggLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICAgIHZhciBfcmVmMiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIocmVzKSB7CiAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgaWYgKHJlcy5vaykgewogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA2OwogICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBfY29udGV4dDIudDAgPSBFcnJvcjsKICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDQ7CiAgICAgICAgICAgICAgcmV0dXJuIHJlcy50ZXh0KCk7CgogICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgX2NvbnRleHQyLnQxID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgdGhyb3cgbmV3IF9jb250ZXh0Mi50MChfY29udGV4dDIudDEpOwoKICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuYWJydXB0KCJyZXR1cm4iLCByZXMuanNvbigpKTsKCiAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIF9jYWxsZWUyKTsKICAgIH0pKTsKCiAgICByZXR1cm4gZnVuY3Rpb24gKF94MikgewogICAgICByZXR1cm4gX3JlZjIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIH07CiAgfSgpKS50aGVuKGZ1bmN0aW9uIChqc29uKSB7CiAgICByZXR1cm4ganNvbjsKICB9KTsKfTsKZXhwb3J0IHZhciBzZWFyY2ggPSBmdW5jdGlvbiBzZWFyY2goc2VsZiwgc2VhcmNoVGV4dCkgewogIHZhciB1cmwgPSBuZXcgVVJMKCIiLmNvbmNhdChlbmRwb2ludCkuY29uY2F0KHBhdGhzLnNlYXJjaCkpOwogIHVybC5zZWFyY2hQYXJhbXMuYXBwZW5kKCd1c2VySWQnLCBzZWxmKTsKICB1cmwuc2VhcmNoUGFyYW1zLmFwcGVuZCgncScsIHNlYXJjaFRleHQpOwogIHJldHVybiBmZXRjaCh1cmwuaHJlZikudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICByZXR1cm4gcmVzLmpzb24oKTsKICB9KS50aGVuKGZ1bmN0aW9uIChqc29uKSB7CiAgICByZXR1cm4ganNvbjsKICB9KTsKfTs="},{"version":3,"sources":["/Users/yokada/M1/ProgCafe/prog-cafe-front/node_modules/eslint-loader/index.js??ref--13-0!/Users/yokada/M1/ProgCafe/prog-cafe-front/src/utils/http.ts"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/camelcase */\nimport { endpoint } from '@/utils/constants';\n\nconst paths = {\n  signin: '/signup',\n  follow: '/follow',\n  search: '/search',\n  getUserInfo: '/user',\n};\n\nconst post = (\n  url: string,\n  body: Record<string, unknown>,\n  options: RequestInit = {},\n) => fetch(url, {\n  method: 'POST',\n  headers: { 'content-type': 'text/plain' },\n  body: JSON.stringify(body),\n  ...options,\n});\n\nexport const signin = (id: string) => post(`${endpoint}${paths.signin}`, { id })\n  .then((res) => {\n    if (!res.ok) throw new Error('Failed signin');\n    return res.json();\n  })\n  .then((json: SignInResponse) => json);\n\nexport const follow = (self: string, target: string, following: boolean) => post(`${endpoint}${paths.follow}`, {\n  id: self,\n  to: target,\n  type: following ? 'follow' : 'unfollow',\n}).then(async (res) => {\n  if (!res.ok) throw new Error(await res.text());\n});\n\nexport const getUserInfo = (self: string, target: string, getFollowing: boolean) => post(`${endpoint}${paths.getUserInfo}`, {\n  id: self,\n  to: target,\n  show_follow: getFollowing,\n}).then(async (res) => {\n  if (!res.ok) throw new Error(await res.text());\n  return res.json();\n}).then((json: UserInfo) => json);\n\nexport const search = (self: string, searchText: string) => {\n  const url = new URL(`${endpoint}${paths.search}`);\n  url.searchParams.append('userId', self);\n  url.searchParams.append('q', searchText);\n\n  return fetch(url.href).then((res) => res.json()).then((json: SearchResult) => json);\n};\n"],"sourceRoot":""}]}