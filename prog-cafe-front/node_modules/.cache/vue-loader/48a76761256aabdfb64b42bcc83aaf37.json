{"remainingRequest":"/Users/yokada/M1/ProgCafe/prog-cafe-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yokada/M1/ProgCafe/prog-cafe-front/src/components/room/status/SelfStatus.vue?vue&type=style&index=0&id=8d88d1d2&lang=scss&scoped=true&","dependencies":[{"path":"/Users/yokada/M1/ProgCafe/prog-cafe-front/src/components/room/status/SelfStatus.vue","mtime":1600820798358},{"path":"/Users/yokada/M1/ProgCafe/prog-cafe-front/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yokada/M1/ProgCafe/prog-cafe-front/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/yokada/M1/ProgCafe/prog-cafe-front/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/yokada/M1/ProgCafe/prog-cafe-front/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yokada/M1/ProgCafe/prog-cafe-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yokada/M1/ProgCafe/prog-cafe-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5zZWxmLXN0YXR1cyB7CiAgcGFkZGluZzogMWVtOwogIHBhZGRpbmctYm90dG9tOiAwOwoKICAuc3RhdHVzLWNoYW5nZS1idXR0b25zIHsKICAgIGRpc3BsYXk6IGdyaWQ7CiAgICBoZWlnaHQ6IDEwMCU7CiAgICB3aWR0aDogMTAwJTsKICAgIGJvcmRlcjogNnB4IHNvbGlkIHZhcigtLW1haW4pOwogICAgYm9yZGVyLXJhZGl1czogMTBweDsKICAgIGJhY2tncm91bmQ6IHZhcigtLW1haW4pOwoKICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmcjsKICAgIGdyaWQtdGVtcGxhdGUtcm93czogbWlubWF4KDAsIDFmcik7CgogICAgYnV0dG9uIHsKICAgICAgaGVpZ2h0OiAxMDAlOwogICAgICBib3JkZXI6IDA7CiAgICAgIG91dGxpbmU6IG5vbmU7CiAgICAgIGJhY2tncm91bmQ6IHZhcigtLW1haW4pOwogICAgICBwYWRkaW5nOiAxZW07CiAgICAgIGN1cnNvcjogcG9pbnRlcjsKCiAgICAgIGJvcmRlci1yYWRpdXM6IDVweDsKCiAgICAgICYuYWN0aXZlIHsKICAgICAgYmFja2dyb3VuZDogdmFyKC0tYmFja2dyb3VuZCk7CiAgICAgICAgY3Vyc29yOiBkZWZhdWx0OwogICAgICB9CgogICAgICB0cmFuc2l0aW9uOiBhbGwgMC4yczsKCiAgICAgIGltZyB7CiAgICAgICAgaGVpZ2h0OiA5MCU7CiAgICAgIH0KICAgICAgcCB7CiAgICAgICAgbWFyZ2luOiAwOwogICAgICAgIGZvbnQtZmFtaWx5OiBVYnVudHUsIHNhbnMtc2VyaWY7CiAgICAgICAgY29sb3I6IHZhcigtLWZvbnQpOwogICAgICB9CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["SelfStatus.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqFA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SelfStatus.vue","sourceRoot":"src/components/room/status","sourcesContent":["<template>\n  <div class=\"self-status\">\n    <div class=\"status-change-buttons\">\n      <button\n        :class=\"{ active: working }\"\n        @click=\"setStatus('Working')\"\n      >\n        <img src=\"@/assets/working.png\" alt=\"working\">\n        <p v-if=\"working\">{{ getActiveTime }}</p>\n      </button>\n      <button\n        :class=\"{ active: !working }\"\n        @click=\"setStatus('Breaking')\"\n      >\n        <img src=\"@/assets/break.png\" alt=\"break\">\n        <p v-if=\"!working\">{{ remainingTime }}</p>\n      </button>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { store } from '@/utils/store';\nimport { Component, Vue } from 'vue-property-decorator';\nimport { zeroPadding } from '@/utils/utils';\n\n@Component\nexport default class SelfStatus extends Vue {\n  limitTime = 300;\n  count = this.limitTime;\n  timer!: number;\n  clock!: number;\n\n  get working() {\n    return store.status === 'Working';\n  }\n\n  get getActiveTime() {\n    const hour = zeroPadding(Math.floor(store.activeTime / 3600), 2);\n    const min = zeroPadding(Math.floor((store.activeTime - (3600 * Number(hour))) / 60), 2);\n    const second = zeroPadding(store.activeTime % 60, 2);\n    return `${hour}:${min}:${second}`;\n  }\n\n  get remainingTime() {\n    const min = zeroPadding(Math.floor(this.count / 60), 2);\n    const second = zeroPadding(this.count % 60, 2);\n    return `${min}:${second}`;\n  }\n\n  setStatus(status: Status) {\n    const oldStatus = store.status; // ボタンを押される前の状態\n    store.status = status;\n    if (oldStatus === store.status) return;\n    store.sendStatus(status);\n    if (status === 'Breaking') {\n      this.timer = setInterval(() => {\n        this.count -= 1;\n        if (this.count <= 0) this.setStatus('Working');\n      }, 1000);\n    } else {\n      this.count = this.limitTime;\n      clearInterval(this.timer);\n    }\n  }\n\n  created() {\n    if (store.stopping) {\n      store.stopping = false;\n      this.clock = setInterval(() => {\n        if (store.status === 'Working') {\n          store.activeTime += 1;\n        }\n      }, 1000);\n    }\n  }\n\n  beforeDestroy() {\n    clearInterval(this.clock);\n    store.stopping = true;\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.self-status {\n  padding: 1em;\n  padding-bottom: 0;\n\n  .status-change-buttons {\n    display: grid;\n    height: 100%;\n    width: 100%;\n    border: 6px solid var(--main);\n    border-radius: 10px;\n    background: var(--main);\n\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: minmax(0, 1fr);\n\n    button {\n      height: 100%;\n      border: 0;\n      outline: none;\n      background: var(--main);\n      padding: 1em;\n      cursor: pointer;\n\n      border-radius: 5px;\n\n      &.active {\n      background: var(--background);\n        cursor: default;\n      }\n\n      transition: all 0.2s;\n\n      img {\n        height: 90%;\n      }\n      p {\n        margin: 0;\n        font-family: Ubuntu, sans-serif;\n        color: var(--font);\n      }\n    }\n  }\n}\n</style>\n"]}]}