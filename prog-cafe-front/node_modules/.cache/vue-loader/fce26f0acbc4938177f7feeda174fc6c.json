{"remainingRequest":"/Users/yokada/M1/ProgCafe/prog-cafe-front/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/yokada/M1/ProgCafe/prog-cafe-front/src/components/global/header/SearchBox.vue?vue&type=style&index=0&id=343efe6d&lang=scss&scoped=true&","dependencies":[{"path":"/Users/yokada/M1/ProgCafe/prog-cafe-front/src/components/global/header/SearchBox.vue","mtime":1600820798358},{"path":"/Users/yokada/M1/ProgCafe/prog-cafe-front/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yokada/M1/ProgCafe/prog-cafe-front/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/yokada/M1/ProgCafe/prog-cafe-front/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/yokada/M1/ProgCafe/prog-cafe-front/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yokada/M1/ProgCafe/prog-cafe-front/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/yokada/M1/ProgCafe/prog-cafe-front/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5zZWFyY2gtYm94IHsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgaW1nIHsKICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgIHdpZHRoOiAxLjI1ZW07CiAgICBoZWlnaHQ6IDEuMjVlbTsKICAgIHRvcDogNTAlOwogICAgbGVmdDogMTBweDsKICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNTAlKTsKICB9CiAgaW5wdXQgewogICAgb3V0bGluZTogbm9uZTsKICAgIGJhY2tncm91bmQ6IG5vbmU7CiAgICB3aWR0aDogNTB2dzsKICAgIGZvbnQtc2l6ZTogMS4yNWVtOwogICAgICBwYWRkaW5nOiAwLjJlbSAwLjVlbSAwLjJlbSAxLjc1ZW07CiAgICBjb2xvcjogdmFyKC0tZm9udCk7CgogICAgYm9yZGVyOiB2YXIoLS1mb250KSAycHggc29saWQ7CiAgICBib3JkZXItcmFkaXVzOiAwLjc1ZW07CgogICAgJjpmb2N1cyB7CiAgICAgIHBhZGRpbmc6IDAuMmVtIDAuNWVtIDAuMmVtIDEuNzVlbTsKICAgICAgJjo6cGxhY2Vob2xkZXIgewogICAgICAgIGNvbG9yOiB0cmFuc3BhcmVudDsKICAgICAgfQogICAgfQogICAgJjo6cGxhY2Vob2xkZXIgewogICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICAgIGNvbG9yOiB2YXIoLS1mb250KTsKICAgICAgZm9udC1mYW1pbHk6IFVidW50dSwgc2Fucy1zZXJpZjsKCiAgICAgIHRyYW5zaXRpb246IGFsbCAwLjJzOwogICAgfQogIH0KfQo="},{"version":3,"sources":["SearchBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"SearchBox.vue","sourceRoot":"src/components/global/header","sourcesContent":["<template>\n  <div class=\"search-box\">\n    <img src=\"@/assets/search.png\" alt=\"search\">\n    <input\n      type=\"text\"\n      placeholder=\"Search\"\n      v-model=\"searchText\"\n      @keypress.enter=\"search\"\n    >\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Vue } from 'vue-property-decorator';\nimport { search } from '@/utils/http';\nimport { store } from '@/utils/store';\n\n@Component\nexport default class SearchBox extends Vue {\n  searchText = ''\n\n  get selfUserName() {\n    return store.githubId ?? '';\n  }\n\n  search() {\n    store.loading = true;\n    // search('tetsushi', 's').then((searchResults) => { // ←テストnp用\n    search(this.selfUserName, this.searchText)\n      .then((searchResults) => { // ←本番用\n        store.searchResults = searchResults;\n        if (this.$route.name !== 'Search') {\n          this.$router.push({ name: 'Search' });\n        }\n      })\n      .catch((error) => {\n        console.error(error);\n      })\n      .finally(() => {\n        store.loading = false;\n      });\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.search-box {\n  position: relative;\n  img {\n    position: absolute;\n    width: 1.25em;\n    height: 1.25em;\n    top: 50%;\n    left: 10px;\n    transform: translateY(-50%);\n  }\n  input {\n    outline: none;\n    background: none;\n    width: 50vw;\n    font-size: 1.25em;\n      padding: 0.2em 0.5em 0.2em 1.75em;\n    color: var(--font);\n\n    border: var(--font) 2px solid;\n    border-radius: 0.75em;\n\n    &:focus {\n      padding: 0.2em 0.5em 0.2em 1.75em;\n      &::placeholder {\n        color: transparent;\n      }\n    }\n    &::placeholder {\n      text-align: center;\n      color: var(--font);\n      font-family: Ubuntu, sans-serif;\n\n      transition: all 0.2s;\n    }\n  }\n}\n</style>\n"]}]}